mono_sdkdir = /Users/long/Documents/Project/monoBuild/mono/sdks/out
monoios_dir = /Users/long/Documents/Project/monoBuild/mono/sdks/ios/runtime
appdir = /Users/long/Documents/Project/monoBuild/mono/sdks/ios/bin/ios-dev/test-corlib.app
sysroot = /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk
cross = $mono_sdkdir/ios-cross64-release/bin/aarch64-darwin-mono-sgen
builddir = .
tempdir = ./temp
signing_identity = -
rule aot
  command = MONO_PATH=$mono_path $cross -O=gsharedvt,float32 --debug  --aot=mtriple=arm64-ios,static,asmonly,direct-icalls,no-direct-calls,dwarfdebug,interp,full,soft-debug,outfile=$outfile,data-outfile=$data_outfile $src_file
  description = [AOT] $src_file -> $outfile
rule aot-cached
  command = if ! test -f $outfile; then MONO_PATH=$mono_path $cross -O=gsharedvt,float32 --debug  --aot=mtriple=arm64-ios,static,asmonly,direct-icalls,no-direct-calls,dwarfdebug,interp,full,soft-debug,outfile=$outfile,data-outfile=$data_outfile $src_file; fi
  description = [AOT] $src_file -> $outfile
rule assemble
  command = clang -isysroot $sysroot -miphoneos-version-min=10.1 -arch arm64 -c -o $out $in
  description = [ASM] $in -> $out
rule assemble-cached
  command = if ! test -f $out; then clang -isysroot $sysroot -miphoneos-version-min=10.1 -arch arm64 -c -o $out $in; fi
  description = [ASM] $in -> $out
rule cp
  command = cp $in $out
  description = [CP] $in -> $out
rule cp-recursive
  command = cp -r $in $out
rule cpifdiff
  command = if cmp -s $in $out ; then : ; else cp $in $out ; fi
  restat = true
rule plutil
  command = cp $in $out; plutil -convert binary1 $out
rule codesign
  command = codesign -v --force --sign "$signing_identity" --entitlements $entitlements --timestamp=none $in
rule codesign-sim
  command = codesign --force --sign - --timestamp=none $in
rule mkdir
  command = mkdir -p $out
rule compile-objc
  command = clang -isysroot $sysroot -miphoneos-version-min=10.1 -arch arm64 -c -o $out $in
rule gen-exe
  command = mkdir $appdir
  command = clang -ObjC -isysroot $sysroot -miphoneos-version-min=10.1 -arch arm64 -framework Foundation -framework UIKit -framework GSS -o $appdir/test-corlib $in -liconv -lz $forcelibs
rule arlib
  command = ar crv $out $in
rule aot_build
  command = MONO_PATH=$builddir $cross -O=gsharedvt,float32 --debug  --aot=mtriple=arm64-ios,static,asmonly,direct-icalls,no-direct-calls,dwarfdebug,interp,full,soft-debug,outfile=$tempdir/$in.s,data-outfile=$in.aotdata $in | grep 'Linking symbol:' | cut -d ':' -f 2 | tee -a $tempdir/info.txt && clang -isysroot $sysroot -miphoneos-version-min=10.1 -arch arm64 -c -o $tempdir/$in.o $tempdir/$in.s && ar crv $out $tempdir/$in.o
  description = [AOT .dll->.s->.o->.aotdata->.a] $in -> $out

    #  




